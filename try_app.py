#!/usr/bin/env python
# coding: utf-8

# In[1]:


import streamlit as st

# Исходные данные
products = {
    "Желатин": {"ед. измерения": "г", "цена за упаковку": 1161.00, "количество в упаковке": 1000.00, "цена за единицу": 1.16},
    "Сикао молочный": {"ед. измерения": "г", "цена за упаковку": 567.00, "количество в упаковке": 1000.00, "цена за единицу": 0.57}
}

# Функция для расчета цены за единицу
def calculate_price_per_unit(details):
    return details["цена за упаковку"] / details["количество в упаковке"]

# Виджеты для изменения параметров
for product, details in products.items():
    details["цена за единицу"] = calculate_price_per_unit(details)

    st.sidebar.header(product)
    details["цена за упаковку"] = st.sidebar.slider("Цена за упаковку", 0.0, 2000.0, details["цена за упаковку"])
    details["количество в упаковке"] = st.sidebar.slider("Количество в упаковке", 0.0, 2000.0, details["количество в упаковке"])

# Вывод таблицы
st.write("+---------------------+------------+------------------+---------------------+---------------+")
st.write("| Продукт             | Ед. изм.   | Цена за упаковку | Кол-во в упаковке   | Цена за ед.   |")
st.write("+---------------------+------------+------------------+---------------------+---------------+")
for product, details in products.items():
    st.write(f"| {product: <20} | {details['ед. измерения']: <10} | {details['цена за упаковку']: <16.2f} | {details['количество в упаковке']: <18.2f} | {calculate_price_per_unit(details): <13.2f} |")
st.write("+---------------------+------------+------------------+---------------------+---------------+")


# In[5]:


pip install toga toga-ios


# In[10]:


import toga

class MyApp(toga.App):
    def startup(self):
        self.main_window = toga.MainWindow(title=self.formal_name)

    def calculate(self, widget):
        products = {
            "Желатин": {"ед. измерения": "г", "цена за упаковку": 1161.00, "количество в упаковке": 1000.00, "цена за единицу": 1.16},
            "Сикао молочный": {"ед. измерения": "г", "цена за упаковку": 567.00, "количество в упаковке": 1000.00, "цена за единицу": 0.57}
        }

        # Функция для расчета цены за единицу
        def calculate_price_per_unit(details):
            return details["цена за упаковку"] / details["количество в упаковке"]

        # Виджеты для изменения параметров
        for product, details in products.items():
            details["цена за единицу"] = calculate_price_per_unit(details)

            st.sidebar.header(product)
            details["цена за упаковку"] = st.sidebar.slider("Цена за упаковку", 0.0, 2000.0, details["цена за упаковку"])
            details["количество в упаковке"] = st.sidebar.slider("Количество в упаковке", 0.0, 2000.0, details["количество в упаковке"])

        # Вывод таблицы
        st.write("+---------------------+------------+------------------+---------------------+---------------+")
        st.write("| Продукт             | Ед. изм.   | Цена за упаковку | Кол-во в упаковке   | Цена за ед.   |")
        st.write("+---------------------+------------+------------------+---------------------+---------------+")
        for product, details in products.items():
            st.write(f"| {product: <20} | {details['ед. измерения']: <10} | {details['цена за упаковку']: <16.2f} | {details['количество в упаковке']: <18.2f} | {calculate_price_per_unit(details): <13.2f} |")
        st.write("+---------------------+------------+------------------+---------------------+---------------+")
    pass

if __name__ == '__main__':
    app = MyApp('MyApp', 'org.myapp')
    app.main_loop()


# In[ ]:




